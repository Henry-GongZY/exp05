lno@0  @21  NODE_PROG    children:[@1 ]
lno@2  @1  NODE_MAIN    children:[@0 @4 @7 @10 @13 @17 ]
lno@2  @0  NODE_TYPE  int  children:[]
lno@4  @4  NODE_STMT  STMT_DECL  children:[@2 @3 ]
lno@4  @2  NODE_TYPE  int  children:[]
lno@4  @3  NODE_VAR  var name: a type: int  children:[]
lno@5  @7  NODE_STMT  STMT_DECL  children:[@5 @6 ]
lno@5  @5  NODE_TYPE  int  children:[]
lno@5  @6  NODE_VAR  var name: b type: int  children:[]
lno@6  @10  NODE_STMT  STMT_DECL  children:[@8 @9 ]
lno@6  @8  NODE_TYPE  double  children:[]
lno@6  @9  NODE_VAR  var name: c type: double  children:[]
lno@7  @13  NODE_STMT  STMT_DECL  children:[@11 @12 ]
lno@7  @11  NODE_TYPE  int  children:[]
lno@7  @12  NODE_VAR  var name: d type: int  children:[]
lno@8  @17  NODE_EXPR  OP: == type: bool  children:[@15 @19 ]
lno@8  @15  NODE_EXPR  OP: + type: int  children:[@14 @16 ]
lno@8  @14  NODE_VAR  var name: a type: int  children:[]
lno@8  @16  NODE_VAR  var name: b type: int  children:[]
lno@8  @19  NODE_EXPR  OP: + type: double  children:[@18 @20 ]
lno@8  @18  NODE_VAR  var name: c type: double  children:[]
lno@8  @20  NODE_VAR  var name: d type: int  children:[]
a  int,b  int,c  double,d  int,